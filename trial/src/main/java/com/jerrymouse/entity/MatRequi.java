package com.jerrymouse.entity;

// Generated Dec 6, 2014 6:06:15 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MatRequi generated by hbm2java
 */
@Entity
@Table(name = "mat_requi", catalog = "procurement")
public class MatRequi implements java.io.Serializable {

	private Long reqNo;
	private Project project;
	private Date dateGen;
	private Date delDt;
	private Date expectedDt;
	private String reqSts;
	private Double itemQty;
	private String itmGrd;
	private String reqItem;
	private String unit;
	private String justification;
	private boolean authorizeSectEngg;
	private String requestedBy;
	private Set<ItemList> itemLists = new HashSet<ItemList>(0);
	private Set<RequiPur> requiPurs = new HashSet<RequiPur>(0);

	public MatRequi() {
	}

	public MatRequi(Project project, Date dateGen, Date delDt, Date expectedDt,
			String reqSts, Double itemQty, String itmGrd, String reqItem,
			String unit, Set<ItemList> itemLists, Set<RequiPur> requiPurs) {
		this.project = project;
		this.dateGen = dateGen;
		this.delDt = delDt;
		this.expectedDt = expectedDt;
		this.reqSts = reqSts;
		this.itemQty = itemQty;
		this.itmGrd = itmGrd;
		this.reqItem = reqItem;
		this.unit = unit;
		this.itemLists = itemLists;
		this.requiPurs = requiPurs;
	}

	@Id
	@Column(name = "req_no", unique = true, nullable = false)
	public Long getReqNo() {
		return this.reqNo;
	}

	public void setReqNo(Long reqNo) {
		this.reqNo = reqNo;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "req_proj_id", referencedColumnName = "project_id")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_gen", length = 19)
	public Date getDateGen() {
		return this.dateGen;
	}

	public void setDateGen(Date dateGen) {
		this.dateGen = dateGen;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "del_dt", length = 19)
	public Date getDelDt() {
		return this.delDt;
	}

	public void setDelDt(Date delDt) {
		this.delDt = delDt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "expected_dt", length = 19)
	public Date getExpectedDt() {
		return this.expectedDt;
	}

	public void setExpectedDt(Date expectedDt) {
		this.expectedDt = expectedDt;
	}

	@Column(name = "req_sts")
	public String getReqSts() {
		return this.reqSts;
	}

	public void setReqSts(String reqSts) {
		this.reqSts = reqSts;
	}

	@Column(name = "item_qty", precision = 22, scale = 0)
	public Double getItemQty() {
		return this.itemQty;
	}

	public void setItemQty(Double itemQty) {
		this.itemQty = itemQty;
	}

	@Column(name = "itm_grd")
	public String getItmGrd() {
		return this.itmGrd;
	}

	public void setItmGrd(String itmGrd) {
		this.itmGrd = itmGrd;
	}

	@Column(name = "req_item")
	public String getReqItem() {
		return this.reqItem;
	}

	public void setReqItem(String reqItem) {
		this.reqItem = reqItem;
	}

	@Column(name = "unit")
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@Column(name = "justification")
	public String getJustification() {
		return this.justification;
	}

	public void setJustification(String justification) {
		this.justification = justification;
	}

	@Column(name = "authorize_sect_engg")
	public boolean isAuthorizeSectEngg() {
		return authorizeSectEngg;
	}

	public void setAuthorizeSectEngg(boolean authorizeSectEngg) {
		this.authorizeSectEngg = authorizeSectEngg;
	}

	@Column(name = "requested_by")
	public String getRequestedBy() {
		return requestedBy;
	}

	public void setRequestedBy(String requestedBy) {
		this.requestedBy = requestedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "matRequi", cascade = CascadeType.ALL)
	public Set<ItemList> getItemLists() {
		return this.itemLists;
	}

	public void setItemLists(Set<ItemList> itemLists) {
		this.itemLists = itemLists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "matRequi", cascade = CascadeType.ALL)
	public Set<RequiPur> getRequiPurs() {
		return this.requiPurs;
	}

	public void setRequiPurs(Set<RequiPur> requiPurs) {
		this.requiPurs = requiPurs;
	}

}
