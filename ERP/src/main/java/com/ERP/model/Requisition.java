package com.ERP.model;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

/**
 * Requisition generated by hbm2java
 */
@Entity
@Table(name = "APP_REQUISITION")
public class Requisition implements java.io.Serializable {

	@Id
	@Column(name = "REQ_NO", unique = true, nullable = false)
	private Long reqNo;
	
	@Transient
	private String reqDate;
	
	@Transient
	private String reqType;

	public String getReqDate() {
		return reqDate;
	}

	public void setReqDate(String reqDate) {
		this.reqDate = reqDate;
	}

	public String getReqType() {
		return reqType;
	}

	public void setReqType(String reqType) {
		this.reqType = reqType;
	}



	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "REQ_PROJ_ID", referencedColumnName = "project_id")
	private Project project;

	
	private int projectId;

	@Transient
	private String dateGen;

	@Transient
	private String delDt;

	@Transient
	private String expectedDt;

	@Column(name = "REQ_STS")
	private String reqSts;

	@Column(name = "AUTHORIZE_SECT_ENGG")
	private boolean authorizeSectEngg;

	@NotNull
	@Column(name = "REQUESTED_BY")
	private String requestedBy;

	@NotNull
	@Column(name = "JUSTIFICATION")
	private String justification;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requisition", cascade = CascadeType.ALL)
	private Set<ItemList> itemLists = new HashSet<ItemList>(0);
	
	
	@Transient
	private List<RequisitionItem> requisitionItemParameterses ;
	
	private long itemId;
	private long gradeId;
	private long unitId;
	private long requisitionLineItemId;
	private boolean checked;

	public Requisition() {
	}

	
	public boolean isChecked() {
		return checked;
	}

	public void setChecked(boolean checked) {
		this.checked = checked;
	}

	public Requisition(Project project, String dateGen, String delDt,
			String expectedDt, String reqSts, Set<ItemList> itemLists) {
		this.project = project;
		this.dateGen = dateGen;
		this.delDt = delDt;
		this.expectedDt = expectedDt;
		this.reqSts = reqSts;
		this.itemLists = itemLists;
	}

	public Long getReqNo() {
		return reqNo;
	}

	public void setReqNo(Long reqNo) {
		this.reqNo = reqNo;
	}

	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	public String getDateGen() {
		return dateGen;
	}

	public void setDateGen(String dateGen) {
		this.dateGen = dateGen;
	}

	public String getDelDt() {
		return delDt;
	}

	public void setDelDt(String delDt) {
		this.delDt = delDt;
	}

	public String getExpectedDt() {
		return expectedDt;
	}

	public void setExpectedDt(String expectedDt) {
		this.expectedDt = expectedDt;
	}

	public String getReqSts() {
		return reqSts;
	}

	public void setReqSts(String reqSts) {
		this.reqSts = reqSts;
	}

	public boolean isAuthorizeSectEngg() {
		return authorizeSectEngg;
	}

	public void setAuthorizeSectEngg(boolean authorizeSectEngg) {
		this.authorizeSectEngg = authorizeSectEngg;
	}

	public String getRequestedBy() {
		return requestedBy;
	}

	public void setRequestedBy(String requestedBy) {
		this.requestedBy = requestedBy;
	}

	public String getJustification() {
		return justification;
	}

	public void setJustification(String justification) {
		this.justification = justification;
	}

	public Set<ItemList> getItemLists() {
		return itemLists;
	}

	public void setItemLists(Set<ItemList> itemLists) {
		this.itemLists = itemLists;
	}

	
	

	public List<RequisitionItem> getRequisitionItemParameterses() {
		return requisitionItemParameterses;
	}

	public void setRequisitionItemParameterses(List<RequisitionItem> requisitionItemParameterses) {
		this.requisitionItemParameterses = requisitionItemParameterses;
	}

	public int getProjectId() {
		return projectId;
	}

	public void setProjectId(int projectId) {
		this.projectId = projectId;
	}

	

	@Override
	public String toString() {
		return "Requisition [reqNo=" + reqNo + ", reqDate=" + reqDate + ", reqType=" + reqType + ", project=" + project
				+ ", projectId=" + projectId + ", dateGen=" + dateGen + ", delDt=" + delDt + ", expectedDt="
				+ expectedDt + ", reqSts=" + reqSts + ", authorizeSectEngg=" + authorizeSectEngg + ", requestedBy="
				+ requestedBy + ", justification=" + justification + ", itemLists=" + itemLists
				+ ", requisitionItemParameterses=" + requisitionItemParameterses + ", itemId=" + itemId + ", gradeId="
				+ gradeId + ", unitId=" + unitId + ", requisitionLineItemId=" + requisitionLineItemId + ", checked="
				+ checked + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (authorizeSectEngg ? 1231 : 1237);
		result = prime * result + ((dateGen == null) ? 0 : dateGen.hashCode());
		result = prime * result + ((delDt == null) ? 0 : delDt.hashCode());
		result = prime * result + ((expectedDt == null) ? 0 : expectedDt.hashCode());
		result = prime * result + ((itemLists == null) ? 0 : itemLists.hashCode());
		result = prime * result + ((justification == null) ? 0 : justification.hashCode());
		result = prime * result + ((project == null) ? 0 : project.hashCode());
		result = prime * result + projectId;
		result = prime * result + ((reqDate == null) ? 0 : reqDate.hashCode());
		result = prime * result + ((reqNo == null) ? 0 : reqNo.hashCode());
		result = prime * result + ((reqSts == null) ? 0 : reqSts.hashCode());
		result = prime * result + ((reqType == null) ? 0 : reqType.hashCode());
		result = prime * result + ((requestedBy == null) ? 0 : requestedBy.hashCode());
		result = prime * result + ((requisitionItemParameterses == null) ? 0 : requisitionItemParameterses.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Requisition other = (Requisition) obj;
		if (authorizeSectEngg != other.authorizeSectEngg)
			return false;
		if (dateGen == null) {
			if (other.dateGen != null)
				return false;
		} else if (!dateGen.equals(other.dateGen))
			return false;
		if (delDt == null) {
			if (other.delDt != null)
				return false;
		} else if (!delDt.equals(other.delDt))
			return false;
		if (expectedDt == null) {
			if (other.expectedDt != null)
				return false;
		} else if (!expectedDt.equals(other.expectedDt))
			return false;
		if (itemLists == null) {
			if (other.itemLists != null)
				return false;
		} else if (!itemLists.equals(other.itemLists))
			return false;
		if (justification == null) {
			if (other.justification != null)
				return false;
		} else if (!justification.equals(other.justification))
			return false;
		if (project == null) {
			if (other.project != null)
				return false;
		} else if (!project.equals(other.project))
			return false;
		if (projectId != other.projectId)
			return false;
		if (reqDate == null) {
			if (other.reqDate != null)
				return false;
		} else if (!reqDate.equals(other.reqDate))
			return false;
		if (reqNo == null) {
			if (other.reqNo != null)
				return false;
		} else if (!reqNo.equals(other.reqNo))
			return false;
		if (reqSts == null) {
			if (other.reqSts != null)
				return false;
		} else if (!reqSts.equals(other.reqSts))
			return false;
		if (reqType == null) {
			if (other.reqType != null)
				return false;
		} else if (!reqType.equals(other.reqType))
			return false;
		if (requestedBy == null) {
			if (other.requestedBy != null)
				return false;
		} else if (!requestedBy.equals(other.requestedBy))
			return false;
		if (requisitionItemParameterses == null) {
			if (other.requisitionItemParameterses != null)
				return false;
		} else if (!requisitionItemParameterses.equals(other.requisitionItemParameterses))
			return false;
		return true;
	}

	public long getItemId() {
		return itemId;
	}

	public void setItemId(long itemId) {
		this.itemId = itemId;
	}

	public long getGradeId() {
		return gradeId;
	}

	public void setGradeId(long gradeId) {
		this.gradeId = gradeId;
	}

	public long getUnitId() {
		return unitId;
	}

	public void setUnitId(long unitId) {
		this.unitId = unitId;
	}

	public long getRequisitionLineItemId() {
		return requisitionLineItemId;
	}

	public void setRequisitionLineItemId(long requisitionLineItemId) {
		this.requisitionLineItemId = requisitionLineItemId;
	}

	
	

	
	
	

	
	
	

}
